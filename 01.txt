1일차 스크립트

ls: List의 약자로 현재 위치에 있는 파일이나 디렉토리 목록을 볼 수 있다.
텍스트 편집중 명령어를 구동시키고 싶다면
:!명령어

위와 같이 작성하면 명령어가 실행된다.

pwd
cp
mv
rm
gcc
mkdir

python 명령어가 동작하는지 확인해야한다.
:!python --version

확인 결과 - Python 3.7.6

구글에서 아나콘다 다운로드를 검색한다.
https://www.anaconda.com/products/individual

다운로드를 누르면 맨 아래쪽으로 내려가게 될 것이다.
64-Bit (x86) Installer (522 MB)

mkdir을 활용해서 다운로드 받는 소프트웨어들을 종합적으로 관리하도록 한다.
왜냐하면 나중에 설치할 SW들의 용량이 최소 100GB 이상을 차지할 수 있기 때문이며
설치를 할 경우엔 용량을 더 많이 차지하게 된다.

Q&A 1. FPGA PetaLinux는 리눅스 버전을 타는데 버전이 안맞는 경우 사용이 불가능한가요 ?

Ans: 원래 정상적인 패턴에서는 버전마다 사용할 수 있는 리눅스 버전이 지정이 되어 있었다.
     그러나 현재 Docker의 등장으로 더 이상 버전에 연연할 필요가 없게 되었다.
     (당시 테스트 환경이 Ubuntu 18.04): Ubuntu 20.04 Docker를 개조할 필요가 있음

Wi-Fi 공유기 문제: 업체측 문의 및 별도 구매

chmod: Change Mode(권한을 변경하는데 사용하는 명령어)

현재 파일이나 디렉토리의 권한을 확인하는데 ls -al을 활용할 수 있다.
drwxrwxr-x
-rw-rw-r--

맨 앞에 'd'는 디렉토리를 의미한다.
맨 앞에 '-'는 파일을 의미한다.
r = read, w = write, x = execution(양키들 습관상 이니셜 E를 사용하지 않음)

맨 앞에 있는 rwx는 사용자에 대한 권한
중간에 있는 rwx는 사용자가 속한 그룹에 대한 권한
맨 뒤에 있는 rwx는 제 3자에 대한 권한

chmod +x 혹은 chmod 755 ???
+x(실행 권한 주기)
755 - r: 4, w: 2, x: 1

확인을 위해 아래 명령을 입력한다.
:!ls ~/Downloads/Anaconda3-2020.02-Linux-x86_64.sh -al

위 명령어로 검사를 하면 다운받은 파일의 권한을 확인할 수 있다.

:!chmod +x (다운받은위치)/Anaconda3-2020.02-Linux-x86_64.sh

이제 아나콘다측에서 제공하는 설치 스크립트의 실행 권한을 확보했으므로
실행을 하면 아나콘다 환경의 파이썬이나 기타 라이브러리들을 설치할 수 있게 된다.

이제 아나콘다를 다운받은 위치로 이동한다.
cd 다운받은위치

./Anaconda3-2020.02-Linux-x86_64.sh

위 명령을 입력하면 설치 스크립트가 동작하기 시작할 것이다.
그러면 창이 하나 나타날 것이다.
q를 누르면 창에서 빠져나올 수 있다.
라이센스 동의에 yes를 입력해준다.
설치 위치를 지정하는 부분인데 앤터치면 디폴트 위치로 잡게 된다(홈 디렉토리에 잡음)
conda init에 yes를 선택해주도록 한다.

설치가 완벽하게 되었다면 터미널창이 아래와 같이 보여야 한다.

(base) oem@ThinkPad:~/ESPython001$

만약 안보인다면 vi ~/.bashrc를 들어가보도록 한다.
여기에 conda ~~~가 보여야 한다.
이를 적용하고자 한다면 아래 명령을 입력한다.

source ~/.bashrc

Q&A 2. (base)가 무엇인가요 ?

Ans: 파이썬의 기본적인 설정들이 준비가 되어있는 설정이며
     향후 아나콘다에서 제공하는 특정 명령어를 활용하여
     손쉽게 라이브러리를 교체할 수 있도록 지원해준다.

(따로따로)
mkdir python_proj
cd python_proj
mkdir basics
cd basics

(한번에)
mkdir -p python_proj/basics
cd python_proj/basics

jupyter notebook


